function e(e,t){"error"===t?(e.addClass("error"),e.removeClass("correcto"),cumple=0):"valido"===t&&(e.addClass("correcto"),e.removeClass("error"),cumple=1)}function t(e,t,n){const i=$("div.alert-container");i.find("div.alert-content").empty(),i.removeClass(),i.addClass("alert-container"),1===e?i.addClass("alert-check").find("div.alert-content").text("Nice !"):2===e?i.addClass("alert-error").find("div.alert-content").text("Hmm, something went wrong"):3===e&&i.addClass("alert-server").find("div.alert-content").text("Maybe the server is down :("),i.fadeIn(t,"linear",(function(){setTimeout((function(){i.fadeOut().animate({bottom:"0%"},{duration:"slow",queue:!1})}),n)})).animate({bottom:"20vh"},{duration:"slow",queue:!1})}function n(e,t,n){return!!(e>=t&e<=n)}function i(t){event.preventDefault();var i=$(t).find("input,select").length,o=($(t).find('button[type="submit"]'),0);const a=/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/,s=/^\d+$/;return $(t).find("input,select").each((function(t,i){var c=$(i).val(),r=$(i).prop("checked"),d=$(i).val(),l=$(i).parent().find("div.custom-checkbox");if(0!==$(i).length){switch($(i).attr("type")){case"text":case"password":case"date":e($(i),""!==c?"valido":"error");break;case"identification":s.test($(i).prop("value"))&n(c.length,10,10)?e($(i),"valido"):e($(i),"error");break;case"emailCustom":a.test($(i).prop("value"))?e($(i),"valido"):e($(i),"error");break;case"checkbox":e(l,!1!==r?"valido":"error");break;case"select":e($(i),1!=d?"valido":"error")}o+=cumple}})),o===i}$(document).ready((function(){navigator.userAgent.indexOf("Trident/")>-1&&(window.location.href="https://www.google.com.mx/chrome/?brand=CHBF&ds_kid=43700034632748694&utm_source=bing&utm_medium=cpc&utm_campaign=1005992%20%7C%20Chrome%20Win10%20%7C%20DR%20%7C%20ESS01%20%7C%20NA%20%7C%20NA%20%7C%20es%20%7C%20Desk%20%7C%20BING%20SEM%20%7C%20BKWS%20~%20Top%20KWDS%20-%20Exact&utm_term=descargar%20chrome&utm_content=Download%20Chrome%20-%20Exact&gclid=CO70m6TT-eUCFUTCDQodmiwDRQ&gclsrc=ds"),setTimeout((function(){$("section#login").fadeIn(1500).css({display:"flex"})}),500);(new WOW).init();$('input[type="checkbox"]').click((function(){let e=$(this).parent().find("div.custom-checkbox");$(this).prop("checked")?e.text("âœ”"):e.text("")})),$("div.icon-menu").click((function(){let e=$("div.menu-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#acountbtn").click((function(){let e=$(".account-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#editUser").click((function(){$("#modalEditUser").fadeIn().css({display:"flex"})})),$("#newStudent,#addRelative").click((function(){let e=$("#modalNuevo"),t=$(this).closest(".modal"),n=e.find(".student").parent(),i=e.find(".relative").parent();switch(t.css({"z-index":"10"}),e.fadeIn().css({display:"flex"}),$(this).attr("id")){case"newStudent":e.find("#tittle-person").text("Student's info"),i.hide(),n.show();break;case"addRelative":e.find("#tittle-person").text("Relative's info"),n.hide(),i.show()}})),$(".btn-cancel").click((function(){$(this).closest(".modal,.modal-tittle").fadeOut(),$(".alert-container").fadeOut()})),$("span.icon-bin").click((function(){$("#modalElminar").fadeIn().css({display:"flex"})})),$("span.icon-eye").click((function(){let e=$("#modalEditShow"),t=e.find("select,input"),n=e.find(".btn-submitModal");e.fadeIn().css({display:"flex"}),t.attr("disabled",!0),n.hide()})),$("#editStudent").click((function(){let e=$(this).closest(".modal"),t=e.find("select,input");e.find(".btn-submitModal").fadeIn("500"),t.attr("disabled",!1)})),$("span.icon-plus").click((function(){$("#modalMatricula").fadeIn().css({display:"flex"})})),$(window).resize((function(){window.innerWidth<=520&&$("table").css({"overflow-x":"scroll"})}))})),$.ajaxSetup({url:"procesar.php",type:"POST",async:!0,error:function(e){console.log("response",e),t(3,1e3,3e3)}}),$("form#login").submit((function(e){e.preventDefault();var n=$(this),i=$(n).serialize();console.log(i),$.post("login.php?log=true",i,(function(e){"1"==JSON.parse(e).success?(t(1,1e3,3e3),location.href="home.php"):t(2,1e3,3e3)}))})),$("#logOut").click((function(){$.post("login.php?log=false",(function(e){"1"==JSON.parse(e).success?location.href="index.php":t(2,1e3,3e3)}))})),$("form#editUsername").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.post("procesar.php",a,(function(e){n.parent().find(".loading").show()})).done((function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?t(1,1e3,3e3):t(2,1e3,3e3)}))}})),$("form#editPassword").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.post("procesar.php",a,(function(e){n.parent().find(".loading").show()})).done((function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?t(1,1e3,3e3):t(2,1e3,3e3)}))}})),$("form.edit").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.post("procesar.php",a,(function(e){n.parent().find(".loading").show()})).done((function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?t(1,1e3,3e3):t(2,1e3,3e3)}))}})),$("form#eliminar").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.ajax({data:a,beforeSend:function(){n.parent().find(".loading").show()},success:function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?(n.closest(".modal").fadeOut(),t(1,1e3,3e3)):t(2,1e3,3e3)}})}})),$("form#matricula").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.ajax({data:a,beforeSend:function(){n.parent().find(".loading").show()},success:function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?(n.closest(".modal").fadeOut(),t(1,1e3,3e3)):t(2,1e3,3e3)}})}})),$("form#persona").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.ajax({data:a,beforeSend:function(){n.parent().find(".loading").show()},success:function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?(n.closest(".modal").fadeOut(),n.closest(".modal").find("form").hide(),n.closest(".modal").find("form#matricula").show(),t(1,1e3,3e3)):t(2,1e3,3e3)}})}})),$("form#acudiente").submit((function(e){var n=$(this),o=n.attr("id");if(i(this)){var a="idForm="+o+"&"+$(n).serialize();console.log(a),$.ajax({data:a,beforeSend:function(){n.parent().find(".loading").show()},success:function(e){n.parent().find(".loading").fadeOut(1e3),"1"==JSON.parse(e).success?t(1,1e3,3e3):t(2,1e3,3e3)}})}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
