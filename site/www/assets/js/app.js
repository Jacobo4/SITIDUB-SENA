function e(e,t){"error"===t?(e.addClass("error"),e.removeClass("correcto"),cumple=0):"valido"===t&&(e.addClass("correcto"),e.removeClass("error"),cumple=1)}function t(e,t,n){const s=$("div.alert-container"),a="div.alert-content";s.find("div.alert-content").empty(),s.removeClass(),s.addClass("alert-container"),"nice"===e?s.addClass("alert-check").find(a).text("Nice !"):"error"===e?s.addClass("alert-error").find(a).text("Hmm, something went wrong"):"serverDown"===e?s.addClass("alert-server").find(a).text("Maybe the server is down :("):"entryDuplicate"===e?s.addClass("alert-duplicate").find(a).text("This user already exists"):"dontExists"===e&&s.addClass("alert-dontExists").find(a).text("This user don't exists"),s.fadeIn(t,"linear",(function(){setTimeout((function(){s.fadeOut().animate({bottom:"0%"},{duration:"slow",queue:!1})}),n)})).animate({bottom:"20vh"},{duration:"slow",queue:!1})}function n(e,t,n){return!!(e>=t&e<=n)}function s(e){let t=$(e).find("select"),n=$(e).find("input");t.val("default").removeClass("correcto"),n.val("").removeClass("correcto")}function a(t){event.preventDefault();$(t).find("input,select");let s=$(t).find("input:visible,select:visible").length,a=($(t).find('button[type="submit"]'),0);const i=/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/,o=/^\d+$/;return $(t).find("input,select").each((function(t,s){let d=$(s).val(),c=$(s).prop("checked"),r=$(s).val(),l=$(s).parent().find("div.custom-checkbox");if(0!==$(s).length){switch($(s).attr("type")){case"text":case"password":case"date":e($(s),""!==d?"valido":"error");break;case"identification":o.test($(s).prop("value"))&n(d.length,5,14)?e($(s),"valido"):e($(s),"error");break;case"emailCustom":i.test($(s).prop("value"))?e($(s),"valido"):e($(s),"error");break;case"checkbox":e(l,!1!==c?"valido":"error");break;case"select":e($(s),"default"!=r?"valido":"error");break;case"year":o.test($(s).prop("value"))&n(d.length,4,5)?e($(s),"valido"):e($(s),"error")}a+=cumple}})),a===s}var i;$(document).ready((function(){navigator.userAgent.indexOf("Trident/")>-1&&(window.location.href="https://www.google.com.mx/chrome/?brand=CHBF&ds_kid=43700034632748694&utm_source=bing&utm_medium=cpc&utm_campaign=1005992%20%7C%20Chrome%20Win10%20%7C%20DR%20%7C%20ESS01%20%7C%20NA%20%7C%20NA%20%7C%20es%20%7C%20Desk%20%7C%20BING%20SEM%20%7C%20BKWS%20~%20Top%20KWDS%20-%20Exact&utm_term=descargar%20chrome&utm_content=Download%20Chrome%20-%20Exact&gclid=CO70m6TT-eUCFUTCDQodmiwDRQ&gclsrc=ds"),setTimeout((function(){$("section#login").fadeIn(1500).css({display:"flex"})}),500);(new WOW).init();$('input[type="checkbox"]').click((function(){let e=$(this).parent().find("div.custom-checkbox");$(this).prop("checked")?e.text("âœ”"):e.text("")})),$("div.icon-menu").click((function(){let e=$("div.menu-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#acountbtn").click((function(){let e=$(".account-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#editUser").click((function(){$("#modalEditUser").fadeIn().css({display:"flex"})})),$("#newStudent").click((function(){let e=$("#modalNewStudent");$(this).closest(".modal").css({"z-index":"10"}),e.fadeIn().css({display:"flex"})})),$(".btn-cancel").click((function(){$(this).closest(".modal,.modal-tittle").fadeOut(),$(".alert-container").fadeOut()})),$("#btn-editStudent").click((function(){let e=$(this).closest(".modal"),t=e.find("select,input");e.find(".btn-submitModal").fadeIn("500"),t.attr("disabled",!1)})),$(window).resize((function(){window.innerWidth<=520&&$("table").css({"overflow-x":"scroll"})}))})),$.ajaxSetup({url:"services/process.php",type:"POST",async:!0,error:function(e){t("serverDown",1e3,3e3)}}),$("#logOut").click((function(){$.post("services/login.php?log=false",(function(e){"Cool"==JSON.parse(e).success?location.href="index.php":t("error",1e3,3e3)}))})),$("form#login").submit((function(e){e.preventDefault();let n=$(this),s=n.serialize();console.log(s),n.parent().find(".loading").show(),$.post("services/login.php?log=true",s,(function(e){n.parent().find(".loading").hide(),"Cool"==JSON.parse(e).success?(t("nice",1e3,3e3),location.href="home.php"):t("error",1e3,3e3)}))}));var o=$("#searchAll");function d(e){e.val();let n=e;clearTimeout(i),i=setTimeout((function(){let e="idForm=searchStudent&"+n.serialize();console.log(e),$.post("services/process.php",e,(function(e){var n=JSON.parse(e);"Error"==n.success?t("error",1e3,3e3):"Don't exists"==n.success?t("dontExists",1e3,3e3):c(n)}))}),1e3)}function c(e){let t=e.slice(-1)[0].rol,n=null;switch(t){case"Administrador":n='<span class="icon-eye"></span><span class="icon-coin-dollar"></span><span class="icon-plus"></span><span class="icon-bin"></span>';break;case"Coordinador":n='<span class="icon-eye"></span>'}e.pop(-1),$("#showStudents").empty(),$.each(e.slice(0),(function(e,t){$("#showStudents").append(`\n      <tr>\n        <td data-student="${r(t.id)}">${e+1}</td>\n        <td>${r(t.descripcion_tdoc)}</td>\n        <td data-ndoc="${r(t.ndoc)}">${r(t.ndoc)}</td>\n        <td>${r(t.nombre1)} ${r(t.nombre2)}</td>\n        <td>${r(t.apellido1)} ${r(t.apellido2)}</td>\n        <td class="table-options">${n}</td>\n      </tr>\n      `)})),l()}function r(e){return"NULL"===e?"":e}function l(){$("span.icon-coin-dollar").click((function(){let e=$("#modalPayments"),t=e.find("input"),n=$(this).closest("tr").find("td[data-student]").attr("data-student");$(this).closest("tr").find("td[data-ndoc]").attr("data-ndoc");t.attr("data-student",n),e.fadeIn().css({display:"flex"})})),$("span.icon-bin").click((function(){let n=$("#modalDelete"),a=n.find("input"),i=$(this).closest("tr").find("td[data-student]").attr("data-student"),o=$(this).closest("tr").find("td[data-ndoc]").attr("data-ndoc");a.attr("data-student",i),n.fadeIn().css({display:"flex"}),$("form#deleteStudent").submit((function(n){n.preventDefault();let a=this,d=$(this).closest(".modal"),c=$(this).attr("id"),r=$(this).find("input"),l=$("#showStudents").find(`td[data-student="${i}"]`).closest("tr");if(r.val()!==o)e($(r),"error");else{e($(r),"valido");let n=`idForm=${c}&idStudent=${i}&${$(a).serialize()}`;console.log(n),$.ajax({data:n,beforeSend:function(){$(a).parent().find(".loading").show()},success:function(e){$(a).parent().find(".loading").fadeOut(1e3);var n=JSON.parse(e);"Cool"==n.success?(l.remove(),d.fadeOut(),s(a),t("nice",1e3,3e3)):"Error"==n.success&&t("error",1e3,3e3)}})}}))})),$("span.icon-eye").click((function(){let e=$("#modalEditShow"),n=`idForm=showStudentInfo&idStudent=${$(this).closest("tr").find("td[data-student]").attr("data-student")}`;$.post("services/process.php",n,(function(n){var s=JSON.parse(n);"Error"==s.success?t("error",1e3,3e3):"Don't exists"==s.success?t("dontExists",1e3,3e3):function(e,t){let n=t.find("select,input"),s=t.find(".btn-submitModal");var a={tittle:$("#personName"),names:$("#editNombresEstu"),surnames:$("#editApellidosEstu"),numIdent:$("#editNumIdentEstu"),tdoc:$("#editTipoIdentEstu"),expeditionPlace:$("#editLugarExpe"),birthdate:$("#editFechaNaci"),birthplace:$("#editLugarNaci"),address:$("#editDireccionEstu"),email:$("#editEmailEstu"),tel1:$("#editTelResiEstu"),eps:$("#editEps"),rh:$("#editRh"),income:$("#editEstrato")};t.fadeIn().css({display:"flex"}),n.attr("disabled",!0),s.hide(),a.tittle.attr("data-student",e[0].id),a.tittle.text(`${r(e[0].nombre1)} ${r(e[0].nombre2)} ${r(e[0].apellido1)} ${r(e[0].apellido2)}`),a.names.val(`${r(e[0].nombre1)} ${r(e[0].nombre2)}`),a.surnames.val(`${r(e[0].apellido1)} ${r(e[0].apellido2)}`),a.numIdent.val(`${r(e[0].ndoc)}`),a.tdoc.val(`${r(e[0].tdoc_persona)}`),a.expeditionPlace.val(`${r(e[0].lugar_expedicion)}`),a.birthdate.val(`${r(e[0].fecha_nacimiento)}`),a.birthplace.val(`${r(e[0].lugar_nacimiento)}`),a.address.val(`${r(e[0].direccion)}`),a.email.val(`${r(e[0].email)}`),a.tel1.val(`${r(e[0].tel1)}`),a.eps.val(`${r(e[0].eps)}`),a.rh.val(`${r(e[0].rh)}`),a.income.val(`${r(e[0].estrato)}`)}(s,e)}))})),$("span.icon-plus").click((function(){let e=$("#modalMatricula"),n=(e.find("input#numMatri"),$(this).closest("tr").find("td[data-student]").attr("data-student"));$(this).closest("tr").find("td[data-student]").attr("data-student");e.fadeIn().css({display:"flex"}),e.find("h1").text("juan"),$("form#insertMatricula").submit((function(e){e.preventDefault();let i=this,o=$(this).closest(".modal"),d=$(this).attr("id");if(a(this)){let e=`idForm=${d}&idStudent=${n}&${$(i).serialize()}`;console.log(e),$.ajax({data:e,beforeSend:function(){$(i).parent().find(".loading").show()},success:function(e){$(i).parent().find(".loading").fadeOut(1e3);var n=JSON.parse(e);"Cool"==n.success?(o.fadeOut(),s(i),t("nice",1e3,3e3)):"Error"==n.success?t("error",1e3,3e3):"Entry duplicate"==n.success&&t("entryDuplicate",1e3,3e3)}})}}))}))}function u(e,n=!0){let i=$(e).attr("id");if(a(e)){var o=`idForm=${i}&${$(e).serialize()}`;console.log(o),$.ajax({data:o,beforeSend:function(){$(e).parent().find(".loading").show()},success:function(a){$(e).parent().find(".loading").fadeOut(1e3);var i=JSON.parse(a);"Cool"==i.success?(n&&$(e).closest(".modal").fadeOut(),s(e),t("nice",1e3,3e3)):"Error"==i.success?t("error",1e3,3e3):"Entry duplicate"==i.success&&t("entryDuplicate",1e3,3e3)}})}}o.keypress((function(){o.val().length>0&&d(o)})),$("span.icon-search").click((function(){o.val().length>0&&d(o)})),$("form.edit").submit((function(e){let n=this,i=$(n).closest(".modal"),c=$(n).attr("id"),r=$("#personName").attr("data-student");$(n).find("input"),$(n).find("select");$(n).serialize();if(a(n)){let e=`idForm=${c}&idStudent=${r}&${$(n).serialize()}`;console.log(e),$.ajax({data:e,beforeSend:function(){$(n).parent().find(".loading").show()},success:function(e){$(n).parent().find(".loading").fadeOut(1e3);var a=JSON.parse(e);"Cool"==a.success?(i.fadeOut(),s(n),d(o),t("nice",1e3,3e3)):"Error"==a.success&&t("error",1e3,3e3)}})}})),$("form#editUsername").submit((function(e){u(this,!1)})),$("form#editPassword").submit((function(e){u(this,!1)})),$("form#insertStudent").submit((function(e){u(this)})),$("#addRelative").click((function(){let e=$("#modalNewRelative"),n=$(this).closest(".modal"),i=n.find("#personName").attr("data-student");n.css({"z-index":"10"}),e.fadeIn().css({display:"flex"}),$("form#insertRelative").submit((function(e){let n=$(this),o=n.attr("id");if(a(n)){let e=`idForm=${o}&idStudent=${i}&${n.serialize()}`;console.log(e),$.ajax({data:e,beforeSend:function(){n.parent().find(".loading").show()},success:function(e){n.parent().find(".loading").fadeOut(1e3);var a=JSON.parse(e);"Cool"==a.success?(n.closest(".modal").fadeOut(),s(n),t("nice",1e3,3e3)):"Error"==a.success?t("error",1e3,3e3):"Entry duplicate"==a.success&&t("entryDuplicate",1e3,3e3)}})}}))})),$.getJSON("assets/json/citys.json",(function(e){var t=[];let n=$("select.citys");for(var s=0;s<e.length;s++)for(var a=0;a<e[s].ciudades.length;a++)t.push("<option value='"+e[s].ciudades[a]+"'>"+e[s].departamento+"-"+e[s].ciudades[a]+"</option>");for(s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/bloodTypes.json",(function(e){var t=[];let n=$("select.bloodTypes");$.each(e,(function(e){t.push("<option value='"+e+"'>"+e+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/eps.json",(function(e){var t=[];let n=$("select.epss");$.each(e,(function(e,n){t.push("<option value='"+n.name+"'>"+n.name+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/grades.json",(function(e){var t=[];let n=$("select.grades");$.each(e,(function(e,n){t.push("<option value='"+n.name+"'>"+n.name+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
