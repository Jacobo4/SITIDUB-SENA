function e(e,t){"error"===t?(e.addClass("error"),e.removeClass("correcto"),cumple=0):"valido"===t&&(e.addClass("correcto"),e.removeClass("error"),cumple=1)}function t(e,t,n){const s=$("div.alert-container"),a="div.alert-content";s.find("div.alert-content").empty(),s.removeClass(),s.addClass("alert-container"),"nice"===e?s.addClass("alert-check").find(a).text("Nice !"):"error"===e?s.addClass("alert-error").find(a).text("Hmm, something went wrong"):"serverDown"===e?s.addClass("alert-server").find(a).text("Maybe the server is down :("):"entryDuplicate"===e?s.addClass("alert-duplicate").find(a).text("This user already exists"):"dontExists"===e&&s.addClass("alert-dontExists").find(a).text("This user don't exists"),s.fadeIn(t,"linear",(function(){setTimeout((function(){s.fadeOut().animate({bottom:"0%"},{duration:"slow",queue:!1})}),n)})).animate({bottom:"20vh"},{duration:"slow",queue:!1})}function n(e,t,n){return!!(e>=t&e<=n)}function s(e){let t=$(e).find("select"),n=$(e).find("input");t.val("default").removeClass("correcto"),n.val("").removeClass("correcto")}function a(t){event.preventDefault();$(t).find("input,select");let s=$(t).find("input:visible,select:visible").length,a=($(t).find('button[type="submit"]'),0);const i=/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/,o=/^\d+$/;return $(t).find("input,select").each((function(t,s){let d=$(s).val(),r=$(s).prop("checked"),c=$(s).val(),l=$(s).parent().find("div.custom-checkbox");if(0!==$(s).length){switch($(s).attr("type")){case"text":case"password":case"date":e($(s),""!==d?"valido":"error");break;case"identification":o.test($(s).prop("value"))&n(d.length,5,10)?e($(s),"valido"):e($(s),"error");break;case"emailCustom":i.test($(s).prop("value"))?e($(s),"valido"):e($(s),"error");break;case"checkbox":e(l,!1!==r?"valido":"error");break;case"select":e($(s),"default"!=c?"valido":"error")}a+=cumple}})),a===s}var i;$(document).ready((function(){navigator.userAgent.indexOf("Trident/")>-1&&(window.location.href="https://www.google.com.mx/chrome/?brand=CHBF&ds_kid=43700034632748694&utm_source=bing&utm_medium=cpc&utm_campaign=1005992%20%7C%20Chrome%20Win10%20%7C%20DR%20%7C%20ESS01%20%7C%20NA%20%7C%20NA%20%7C%20es%20%7C%20Desk%20%7C%20BING%20SEM%20%7C%20BKWS%20~%20Top%20KWDS%20-%20Exact&utm_term=descargar%20chrome&utm_content=Download%20Chrome%20-%20Exact&gclid=CO70m6TT-eUCFUTCDQodmiwDRQ&gclsrc=ds"),setTimeout((function(){$("section#login").fadeIn(1500).css({display:"flex"})}),500);(new WOW).init();$('input[type="checkbox"]').click((function(){let e=$(this).parent().find("div.custom-checkbox");$(this).prop("checked")?e.text("âœ”"):e.text("")})),$("div.icon-menu").click((function(){let e=$("div.menu-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#acountbtn").click((function(){let e=$(".account-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#editUser").click((function(){$("#modalEditUser").fadeIn().css({display:"flex"})})),$("#addRelative").click((function(){let e=$("#modalNewRelative"),t=$(this).closest(".modal"),n=t.find("#personName").attr("data-student");t.css({"z-index":"10"}),e.fadeIn().css({display:"flex"}),e.find("form#insertRelative").append(`<input type="text" name="idStudent" value="${n}" style="display:none">`)})),$("#newStudent").click((function(){let e=$("#modalNewStudent");$(this).closest(".modal").css({"z-index":"10"}),e.fadeIn().css({display:"flex"})})),$(".btn-cancel").click((function(){$(this).closest(".modal,.modal-tittle").fadeOut(),$(".alert-container").fadeOut()})),$("#btn-editStudent").click((function(){let e=$(this).closest(".modal"),t=e.find("select,input");e.find(".btn-submitModal").fadeIn("500"),t.attr("disabled",!1)})),$(window).resize((function(){window.innerWidth<=520&&$("table").css({"overflow-x":"scroll"})}))})),$.ajaxSetup({url:"services/process.php",type:"POST",async:!0,error:function(e){t("serverDown",1e3,3e3)}}),$("#logOut").click((function(){$.post("services/login.php?log=false",(function(e){"Cool"==JSON.parse(e).success?location.href="index.php":t("error",1e3,3e3)}))})),$("form#login").submit((function(e){e.preventDefault();let n=$(this),s=n.serialize();n.parent().find(".loading").show(),$.post("services/login.php?log=true",s,(function(e){n.parent().find(".loading").hide(),"Cool"==JSON.parse(e).success?(t("nice",1e3,3e3),location.href="home.php"):t("error",1e3,3e3)}))}));var o=$("#searchAll");function d(e){e.val();let n=e;clearTimeout(i),i=setTimeout((function(){let e="idForm=searchStudent&"+n.serialize();$.post("services/process.php",e,(function(e){var n=JSON.parse(e);"Error"==n.success?t("error",1e3,3e3):"Don't exists"==n.success?t("dontExists",1e3,3e3):r(n)}))}),1e3)}function r(e){let t=e.slice(-1)[0].rol,n=null;switch(t){case"Administrador":n='<span class="icon-eye"></span><span class="icon-plus"></span><span class="icon-bin"></span>';break;case"Coordinador":n='<span class="icon-eye"></span>'}e.pop(-1),$("#showStudents").empty(),$.each(e.slice(0),(function(e,t){$("#showStudents").append(`\n      <tr>\n        <td data-student="${t.id}">${e+1}</td>\n        <td>${t.descripcion_tdoc}</td>\n        <td data-ndoc="${t.ndoc}">${t.ndoc}</td>\n        <td>${t.nombre1} ${t.nombre2}</td>\n        <td>${t.apellido1} ${t.apellido2}</td>\n        <td class="table-options">${n}</td>\n      </tr>\n      `)})),c()}function c(){$("span.icon-bin").click((function(){let e=$("#modalDelete"),t=e.find("input"),n=$(this).closest("tr").find("td[data-student]").attr("data-student"),s=$(this).closest("tr").find("td[data-ndoc]").attr("data-ndoc");t.attr("data-student",n),t.attr("data-ndoc",s),e.fadeIn().css({display:"flex"})})),$("span.icon-eye").click((function(){let e=$("#modalEditShow"),n=`idForm=showStudentInfo&idStudent=${$(this).closest("tr").find("td[data-student]").attr("data-student")}`;$.post("services/process.php",n,(function(n){var s=JSON.parse(n);"Error"==s.success?t("error",1e3,3e3):"Don't exists"==s.success?t("dontExists",1e3,3e3):function(e,t){let n=t.find("select,input"),s=t.find(".btn-submitModal");var a={tittle:$("#personName"),names:$("#editNombresEstu"),surnames:$("#editApellidosEstu"),numIdent:$("#editNumIdentEstu"),tdoc:$("#editTipoIdentEstu"),expeditionPlace:$("#editLugarExpe"),birthdate:$("#editFechaNaci"),birthplace:$("#editLugarNaci"),address:$("#editDireccionEstu"),email:$("#editEmailEstu"),tel1:$("#editTelResiEstu"),eps:$("#editEps"),rh:$("#editRh"),income:$("#editEstrato")};t.fadeIn().css({display:"flex"}),n.attr("disabled",!0),s.hide(),a.tittle.attr("data-student",e[0].id),a.tittle.text(`${e[0].nombre1} ${e[0].nombre2} ${e[0].apellido1} ${e[0].apellido2}`),a.names.val(`${e[0].nombre1} ${e[0].nombre2}`),a.surnames.val(`${e[0].apellido1} ${e[0].apellido2}`),a.numIdent.val(`${e[0].ndoc}`),a.tdoc.val(`${e[0].tdoc_persona}`),a.expeditionPlace.val(`${e[0].lugar_expedicion}`),a.birthdate.val(`${e[0].fecha_nacimiento}`),a.birthplace.val(`${e[0].lugar_nacimiento}`),a.address.val(`${e[0].direccion}`),a.email.val(`${e[0].email}`),a.tel1.val(`${e[0].tel1}`),a.eps.val(`${e[0].eps}`),a.rh.val(`${e[0].rh}`),a.income.val(`${e[0].estrato}`)}(s,e)}))})),$("span.icon-plus").click((function(){let e=$("#modalMatricula"),t=e.find("input#numMatri"),n=$(this).closest("tr").find("td[data-student]").attr("data-student"),s=$(this).closest("tr").find("td[data-ndoc]").attr("data-ndoc");e.fadeIn().css({display:"flex"}),t.attr("data-student",n),t.attr("data-ndoc",s)}))}function l(e,n=!0){let i=$(e).attr("id");if(a(e)){var o=`idForm=${i}&${$(e).serialize()}`;console.log(o),$.ajax({data:o,beforeSend:function(){$(e).parent().find(".loading").show()},success:function(a){$(e).parent().find(".loading").fadeOut(1e3);var i=JSON.parse(a);"Cool"==i.success?(n&&$(e).closest(".modal").fadeOut(),s(e),t("nice",1e3,3e3)):"Error"==i.success?t("error",1e3,3e3):"Entry duplicate"==i.success&&t("entryDuplicate",1e3,3e3)}})}}o.keypress((function(){o.val().length>0&&d(o)})),$("span.icon-search").click((function(){o.val().length>0&&d(o)})),$("form.edit").submit((function(e){let n=this,i=$(n).closest(".modal"),o=$(n).attr("id"),d=$("#personName").attr("data-student");$(n).find("input"),$(n).find("select");$(n).serialize();if(a(n)){let e=`idForm=${o}&idStudent=${d}&${$(n).serialize()}`;$.ajax({data:e,beforeSend:function(){$(n).parent().find(".loading").show()},success:function(e){$(n).parent().find(".loading").fadeOut(1e3);var a=JSON.parse(e);"Cool"==a.success?(i.fadeOut(),s(n),t("nice",1e3,3e3)):"Error"==a.success&&t("error",1e3,3e3)}})}})),$("form#insertMatricula").submit((function(e){e.preventDefault();let n=this,i=$(this).closest(".modal"),o=$(this).attr("id"),d=$(this).find("input").attr("data-student");if(a(this)){let e=`idForm=${o}&idStudent=${d}&${$(n).serialize()}`;$.ajax({data:e,beforeSend:function(){$(n).parent().find(".loading").show()},success:function(e){$(n).parent().find(".loading").fadeOut(1e3);var a=JSON.parse(e);"Cool"==a.success?(i.fadeOut(),s(n),t("nice",1e3,3e3)):"Error"==a.success&&t("error",1e3,3e3)}})}})),$("form#editUsername").submit((function(e){l(this,!1)})),$("form#editPassword").submit((function(e){l(this,!1)})),$("form#insertStudent").submit((function(e){l(this)})),$("form#insertRelative").submit((function(e){l(this)})),$("form#deleteStudent").submit((function(n){n.preventDefault();let a=this,i=$(this).closest(".modal"),o=$(this).attr("id"),d=$(this).find("input"),r=d.attr("data-student"),c=d.attr("data-ndoc"),l=$("#showStudents").find(`td[data-student="${r}"]`).closest("tr");if(d.val()!==c)e($(d),"error");else{e($(d),"valido");let n=`idForm=${o}&idStudent=${r}&${$(a).serialize()}`;$.ajax({data:n,beforeSend:function(){$(a).parent().find(".loading").show()},success:function(e){$(a).parent().find(".loading").fadeOut(1e3);var n=JSON.parse(e);"Cool"==n.success?(l.remove(),i.fadeOut(),s(a),t("nice",1e3,3e3)):"Error"==n.success&&t("error",1e3,3e3)}})}})),$.getJSON("assets/json/citys.json",(function(e){var t=[];let n=$("select.citys");for(var s=0;s<e.length;s++)for(var a=0;a<e[s].ciudades.length;a++)t.push("<option value='"+e[s].ciudades[a]+"'>"+e[s].departamento+"-"+e[s].ciudades[a]+"</option>");for(s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/bloodTypes.json",(function(e){var t=[];let n=$("select.bloodTypes");$.each(e,(function(e){t.push("<option value='"+e+"'>"+e+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/eps.json",(function(e){var t=[];let n=$("select.epss");$.each(e,(function(e,n){t.push("<option value='"+n.name+"'>"+n.name+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/grades.json",(function(e){var t=[];let n=$("select.grades");$.each(e,(function(e,n){t.push("<option value='"+n.name+"'>"+n.name+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
