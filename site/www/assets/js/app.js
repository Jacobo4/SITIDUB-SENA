function e(e,t){"error"===t?(e.addClass("error"),e.removeClass("correcto"),cumple=0):"valido"===t&&(e.addClass("correcto"),e.removeClass("error"),cumple=1)}function t(e,t,n){const s=$("div.alert-container"),o="div.alert-content";s.find("div.alert-content").empty(),s.removeClass(),s.addClass("alert-container"),"nice"===e?s.addClass("alert-check").find(o).text("Nice !"):"error"===e?s.addClass("alert-error").find(o).text("Hmm, something went wrong"):"serverDown"===e?s.addClass("alert-server").find(o).text("Maybe the server is down :("):"entryDuplicate"===e?s.addClass("alert-duplicate").find(o).text("This user already exists"):"dontExists"===e&&s.addClass("alert-dontExists").find(o).text("This user don't exists"),s.fadeIn(t,"linear",(function(){setTimeout((function(){s.fadeOut().animate({bottom:"0%"},{duration:"slow",queue:!1})}),n)})).animate({bottom:"20vh"},{duration:"slow",queue:!1})}function n(e,t,n){return!!(e>=t&e<=n)}function s(t){event.preventDefault();$(t).find("input,select");let s=$(t).find("input:visible,select:visible").length,o=($(t).find('button[type="submit"]'),0);const i=/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/,a=/^\d+$/;return $(t).find("input,select").each((function(t,s){let c=$(s).val(),r=$(s).prop("checked"),l=$(s).val(),d=$(s).parent().find("div.custom-checkbox");if(0!==$(s).length){switch($(s).attr("type")){case"text":case"password":case"date":e($(s),""!==c?"valido":"error");break;case"identification":a.test($(s).prop("value"))&n(c.length,10,10)?e($(s),"valido"):e($(s),"error");break;case"emailCustom":i.test($(s).prop("value"))?e($(s),"valido"):e($(s),"error");break;case"checkbox":e(d,!1!==r?"valido":"error");break;case"select":e($(s),1!=l?"valido":"error")}o+=cumple}})),o===s}var o;$(document).ready((function(){navigator.userAgent.indexOf("Trident/")>-1&&(window.location.href="https://www.google.com.mx/chrome/?brand=CHBF&ds_kid=43700034632748694&utm_source=bing&utm_medium=cpc&utm_campaign=1005992%20%7C%20Chrome%20Win10%20%7C%20DR%20%7C%20ESS01%20%7C%20NA%20%7C%20NA%20%7C%20es%20%7C%20Desk%20%7C%20BING%20SEM%20%7C%20BKWS%20~%20Top%20KWDS%20-%20Exact&utm_term=descargar%20chrome&utm_content=Download%20Chrome%20-%20Exact&gclid=CO70m6TT-eUCFUTCDQodmiwDRQ&gclsrc=ds"),setTimeout((function(){$("section#login").fadeIn(1500).css({display:"flex"})}),500);(new WOW).init();$('input[type="checkbox"]').click((function(){let e=$(this).parent().find("div.custom-checkbox");$(this).prop("checked")?e.text("âœ”"):e.text("")})),$("div.icon-menu").click((function(){let e=$("div.menu-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#acountbtn").click((function(){let e=$(".account-container");"none"==e.css("display")?e.slideDown():e.slideUp()})),$("#editUser").click((function(){$("#modalEditUser").fadeIn().css({display:"flex"})})),$("#addRelative").click((function(){let e=$("#modalNewRelative");$(this).closest(".modal").css({"z-index":"10"}),e.fadeIn().css({display:"flex"})})),$("#newStudent").click((function(){let e=$("#modalNewStudent");$(this).closest(".modal").css({"z-index":"10"}),e.fadeIn().css({display:"flex"})})),$(".btn-cancel").click((function(){$(this).closest(".modal,.modal-tittle").fadeOut(),$(".alert-container").fadeOut()})),$("#btn-editStudent").click((function(){let e=$(this).closest(".modal"),t=e.find("select,input");e.find(".btn-submitModal").fadeIn("500"),t.attr("disabled",!1)})),$(window).resize((function(){window.innerWidth<=520&&$("table").css({"overflow-x":"scroll"})}))})),$.ajaxSetup({url:"services/process.php",type:"POST",async:!0,error:function(e){console.log("response",e),t("serverDown",1e3,3e3)}});var i=$("#searchAll");function a(e){e.val();let n=e;clearTimeout(o),o=setTimeout((function(){let e="idForm=serachEstu&"+n.serialize();console.log(e),$.post("services/process.php",e,(function(e){var n=JSON.parse(e);"Error"==n.success?t("error",1e3,3e3):"Don't exists"==n.success?t("dontExists",1e3,3e3):c(n)}))}),1e3)}function c(e){let t=e.slice(-1)[0].rol,n=null;switch(t){case"Administrador":n='<span class="icon-eye"></span><span class="icon-plus"></span><span class="icon-bin"></span>';break;case"Coordinador":n='<span class="icon-eye"></span>'}e.pop(-1),$("#showStudents").empty(),$.each(e.slice(0),(function(e,t){$.each(t,(function(e,t){null==t&&(t=" ")})),$("#showStudents").append(`\n      <tr>\n        <td>${e+1}</td>\n        <td data-tdoc="${t.tdoc_persona}" >${t.tdoc_persona}</td>\n        <td data-student="${t.ndoc}">${t.ndoc}</td>\n        <td>${t.nombre1} ${t.nombre2}</td>\n        <td>${t.apellido1} ${t.apellido2}</td>\n        <td class="table-options">${n}</td>\n      </tr>\n      `)})),r()}function r(){$("span.icon-bin").click((function(){$("#modalDelete").fadeIn().css({display:"flex"})})),$("span.icon-eye").click((function(){let e=$("#modalEditShow"),n=`idForm=showStudentInfo&numIdent=${$(this).closest("tr").find("td[data-student]").attr("data-student")}&tipoIdent=${$(this).closest("tr").find("td[data-tdoc]").attr("data-tdoc")}`;console.log(n),$.post("services/process.php",n,(function(n){var s=JSON.parse(n);"Error"==s.success?t("error",1e3,3e3):"Don't exists"==s.success?t("dontExists",1e3,3e3):function(e,t){t.fadeIn().css({display:"flex"});let n=t.find("select,input"),s=t.find(".btn-submitModal");n.attr("disabled",!0),s.hide(),$.each(n,(function(e,t){}));let o=e[0].nombre1;$("#personName").text(o)}(s,e)}))})),$("span.icon-plus").click((function(){$("#modalMatricula").fadeIn().css({display:"flex"})}))}function l(e,n=!0){let o=$(e).attr("id"),i=$(e).find("input,select");if(s(e)){var a="idForm="+o+"&"+$(e).serialize();console.log(a),$.ajax({data:a,beforeSend:function(){$(e).parent().find(".loading").show()},success:function(s){$(e).parent().find(".loading").fadeOut(1e3);var o=JSON.parse(s);"Cool"==o.success?(n&&$(e).closest(".modal").fadeOut(),i.val("").removeClass("correcto"),t("nice",1e3,3e3)):"Error"==o.success?t("error",1e3,3e3):"Entry duplicate"==o.success&&t("entryDuplicate",1e3,3e3)}})}}i.keypress((function(){i.val().length>0&&a(i)})),$("span.icon-search").click((function(){i.val().length>0&&a(i)})),$("form#login").submit((function(e){e.preventDefault();var n=$(this).serialize();console.log(n),$.post("services/login.php?log=true",n,(function(e){"Cool"==JSON.parse(e).success?(t("nice",1e3,3e3),location.href="home.php"):t("error",1e3,3e3)}))})),$("#logOut").click((function(){$.post("services/login.php?log=false",(function(e){"Cool"==JSON.parse(e).success?location.href="index.php":t("error",1e3,3e3)}))})),$("form.edit").submit((function(e){l(this,!1)})),$("form#editUsername").submit((function(e){l(this,!1)})),$("form#editPassword").submit((function(e){l(this,!1)})),$("form#estudiante").submit((function(e){l(this)})),$("form#responsable").submit((function(e){l(this)})),$("form#delete").submit((function(e){l(this)})),$("form#matricula").submit((function(e){l(this)})),$.getJSON("assets/json/citys.json",(function(e){var t=[];let n=$("select.citys");for(var s=0;s<e.length;s++)for(var o=0;o<e[s].ciudades.length;o++)t.push("<option value='"+e[s].ciudades[o]+"'>"+e[s].departamento+"-"+e[s].ciudades[o]+"</option>");for(s=0;s<t.length;s++)n.append(t[s])})),$.getJSON("assets/json/bloodTypes.json",(function(e){var t=[];let n=$("select.bloodTypes");$.each(e,(function(e){t.push("<option value='"+e+"'>"+e+"</option>")}));for(var s=0;s<t.length;s++)n.append(t[s])}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fZm9ybXMuanMiLCJfZG9tLmpzIl0sIm5hbWVzIjpbInBpbnRhclN0aWxvcyIsImVsZW0iLCJ0aXBvIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImN1bXBsZSIsInNob3dBbGVydCIsInRpbWVJbiIsInRpbWVPdXQiLCJkaXZBbGVydCIsIiQiLCJjb250ZW50QWxlcnQiLCJmaW5kIiwiZW1wdHkiLCJ0ZXh0IiwiZmFkZUluIiwic2V0VGltZW91dCIsImZhZGVPdXQiLCJhbmltYXRlIiwiYm90dG9tIiwiZHVyYXRpb24iLCJxdWV1ZSIsInZhbGlkYXJMZW5ndGgiLCJ2YWxvciIsIm1pbkxlbmd0aCIsIm1heExlbmd0aCIsInZhbGlkYXRlRm9ybSIsImZvcm0iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiY2FtcG9zT2JsaWdhIiwibGVuZ3RoIiwidG90YWwiLCJyZWdFeHBFbWFpbCIsInJlZ0V4cE51bWJlciIsImVhY2giLCJpIiwiZSIsInZhbG9ySW5wdXQiLCJ2YWwiLCJ2YWxvckNoZWNrYm94IiwicHJvcCIsInZhbG9yU2VsZWN0IiwiY3VzdG9tRGl2Q2hlY2siLCJwYXJlbnQiLCJhdHRyIiwidGVzdCIsInBldGljaW9uIiwiZG9jdW1lbnQiLCJyZWFkeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImluZGV4T2YiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJjc3MiLCJkaXNwbGF5IiwiV09XIiwiaW5pdCIsImNsaWNrIiwiY3VzdG9tQ2hlY2siLCJ0aGlzIiwibWVudSIsInNsaWRlRG93biIsInNsaWRlVXAiLCJhY291bnRDb250YWluZXIiLCJtb2RhbCIsImNsb3Nlc3QiLCJ6LWluZGV4IiwiaW5wdXRzIiwicmVzaXplIiwiaW5uZXJXaWR0aCIsIm92ZXJmbG93LXgiLCJhamF4U2V0dXAiLCJ1cmwiLCJ0eXBlIiwiYXN5bmMiLCJlcnJvciIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImJ1dHRvblNlYXJjaCIsInNlYXJjaFN0dWRlbnQiLCJidXR0b24iLCJpbnB1dCIsImNsZWFyVGltZW91dCIsImRhdGEiLCJzZXJpYWxpemUiLCJwb3N0Iiwic3R1ZGVudHMiLCJKU09OIiwicGFyc2UiLCJzdWNjZXNzIiwic2hvd1N0dWRlbnRzIiwicm9sIiwic2xpY2UiLCJvcHRpb25zIiwicG9wIiwiaWQiLCJzdHVkZW50IiwiY2FtcG8iLCJ2YWx1ZSIsImFwcGVuZCIsInRkb2NfcGVyc29uYSIsIm5kb2MiLCJub21icmUxIiwibm9tYnJlMiIsImFwZWxsaWRvMSIsImFwZWxsaWRvMiIsIm9wdGlvbnNTdHVkZW50cyIsIm1vZGFsU2hvdyIsInN0dWRlbnRJbmZvIiwic2F2ZUJ1dHRvbnMiLCJoaWRlIiwia2V5IiwidGl0dGxlIiwic2hvd1N0dWRlbnRJbmZvIiwic2VuZEZvcm0iLCJjbG9zZU1vZGFsIiwiaWRGb3JtIiwiYWpheCIsImJlZm9yZVNlbmQiLCJzaG93IiwianNvbkRhdGEiLCJrZXlwcmVzcyIsInN1Ym1pdCIsImdldEpTT04iLCJzZWxlY3QiLCJ6IiwiY2l1ZGFkZXMiLCJwdXNoIiwiZGVwYXJ0YW1lbnRvIl0sIm1hcHBpbmdzIjoiQUFDQSxTQUFBQSxFQUFBQyxFQUFBQyxHQUVBLFVBQUFBLEdBQ0FELEVBQUFFLFNBQUEsU0FDQUYsRUFBQUcsWUFBQSxZQUNBQyxPQUFBLEdBRUEsV0FBQUgsSUFDQUQsRUFBQUUsU0FBQSxZQUNBRixFQUFBRyxZQUFBLFNBQ0FDLE9BQUEsR0FNQSxTQUFBQyxFQUFBRCxFQUFBRSxFQUFBQyxHQUVBLE1BQUFDLEVBQUFDLEVBQUEsdUJBQ0FDLEVBQUEsb0JBRUFGLEVBQUFHLEtBQUEscUJBQUFDLFFBQ0FKLEVBQUFMLGNBQ0FLLEVBQUFOLFNBQUEsbUJBRUEsU0FBQUUsRUFDQUksRUFBQU4sU0FBQSxlQUFBUyxLQUFBRCxHQUFBRyxLQUFBLFVBRUEsVUFBQVQsRUFDQUksRUFBQU4sU0FBQSxlQUFBUyxLQUFBRCxHQUFBRyxLQUFBLDZCQUVBLGVBQUFULEVBQ0FJLEVBQUFOLFNBQUEsZ0JBQUFT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QUFBLElBQUE2RixFQUFBLEVBQUFBLEVBQUExQyxFQUFBbkQsR0FBQThGLFNBQUFuRyxPQUFBa0csSUFDQWhDLEVBQUFrQyxLQUFBLGtCQUFBNUMsRUFBQW5ELEdBQUE4RixTQUFBRCxHQUFBLEtBQUExQyxFQUFBbkQsR0FBQWdHLGFBQUEsSUFBQTdDLEVBQUFuRCxHQUFBOEYsU0FBQUQsR0FBQSxhQUdBLElBQUE3RixFQUFBLEVBQUFBLEVBQUE2RCxFQUFBbEUsT0FBQUssSUFDQTRGLEVBQUF6QixPQUFBTixFQUFBN0QsT0FLQTFCLEVBQUFxSCxRQUFBLCtCQUFBLFNBQUF4QyxHQUVBLElBQUFVLEVBQUEsR0FDQSxJQUFBK0IsRUFBQXRILEVBQUEscUJBRUFBLEVBQUF5QixLQUFBb0QsR0FBQSxTQUFBNEIsR0FDQWxCLEVBQUFrQyxLQUFBLGtCQUFBaEIsRUFBQSxLQUFBQSxFQUFBLGdCQUdBLElBQUEsSUFBQS9FLEVBQUEsRUFBQUEsRUFBQTZELEVBQUFsRSxPQUFBSyxJQUNBNEYsRUFBQXpCLE9BQUFOLEVBQUE3RCIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8vLy8vLy8vLy8gUGludGEgZXN0aWxvcyBkZSBlcnJvciB5IHZhbGlkb1xyXG5mdW5jdGlvbiBwaW50YXJTdGlsb3MoZWxlbSwgdGlwbykge1xyXG5cclxuICBpZiAodGlwbyA9PT0gJ2Vycm9yJykge1xyXG4gICAgZWxlbS5hZGRDbGFzcygnZXJyb3InKTtcclxuICAgIGVsZW0ucmVtb3ZlQ2xhc3MoJ2NvcnJlY3RvJyk7XHJcbiAgICBjdW1wbGUgPSAwO1xyXG5cclxuICB9IGVsc2UgaWYgKHRpcG8gPT09ICd2YWxpZG8nKSB7XHJcbiAgICBlbGVtLmFkZENsYXNzKCdjb3JyZWN0bycpO1xyXG4gICAgZWxlbS5yZW1vdmVDbGFzcygnZXJyb3InKTtcclxuICAgIGN1bXBsZSA9IDE7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLy8vLy8vLy8vLy8vIE11ZXN0cmEgYWxlcnRhIGRlIGxvcyBmb3JtdWxhcmlvc1xyXG5mdW5jdGlvbiBzaG93QWxlcnQoY3VtcGxlLCB0aW1lSW4sIHRpbWVPdXQpIHtcclxuXHJcbiAgY29uc3QgZGl2QWxlcnQgPSAkKCdkaXYuYWxlcnQtY29udGFpbmVyJyk7XHJcbiAgY29uc3QgY29udGVudEFsZXJ0ID0gJ2Rpdi5hbGVydC1jb250ZW50JztcclxuXHJcbiAgZGl2QWxlcnQuZmluZCgnZGl2LmFsZXJ0LWNvbnRlbnQnKS5lbXB0eSgpO1xyXG4gIGRpdkFsZXJ0LnJlbW92ZUNsYXNzKCk7XHJcbiAgZGl2QWxlcnQuYWRkQ2xhc3MoJ2FsZXJ0LWNvbnRhaW5lcicpO1xyXG5cclxuICBpZiAoY3VtcGxlID09PSBcIm5pY2VcIikge1xyXG4gICAgZGl2QWxlcnQuYWRkQ2xhc3MoJ2FsZXJ0LWNoZWNrJykuZmluZChjb250ZW50QWxlcnQpLnRleHQoJ05pY2UgIScpO1xyXG5cclxuICB9IGVsc2UgaWYgKGN1bXBsZSA9PT0gXCJlcnJvclwiKSB7XHJcbiAgICBkaXZBbGVydC5hZGRDbGFzcygnYWxlcnQtZXJyb3InKS5maW5kKGNvbnRlbnRBbGVydCkudGV4dCgnSG1tLCBzb21ldGhpbmcgd2VudCB3cm9uZycpO1xyXG5cclxuICB9IGVsc2UgaWYgKGN1bXBsZSA9PT0gXCJzZXJ2ZXJEb3duXCIpIHtcclxuICAgIGRpdkFsZXJ0LmFkZENsYXNzKCdhbGVydC1zZXJ2ZXInKS5maW5kKGNvbnRlbnRBbGVydCkudGV4dCgnTWF5YmUgdGhlIHNlcnZlciBpcyBkb3duIDooJyk7XHJcblxyXG4gIH0gZWxzZSBpZiAoY3VtcGxlID09PSBcImVudHJ5RHVwbGljYXRlXCIpIHtcclxuICAgIGRpdkFsZXJ0LmFkZENsYXNzKCdhbGVydC1kdXBsaWNhdGUnKS5maW5kKGNvbnRlbnRBbGVydCkudGV4dCgnVGhpcyB1c2VyIGFscmVhZHkgZXhpc3RzJyk7XHJcblxyXG4gIH0gZWxzZSBpZiAoY3VtcGxlID09PSBcImRvbnRFeGlzdHNcIikge1xyXG4gICAgZGl2QWxlcnQuYWRkQ2xhc3MoJ2FsZXJ0LWRvbnRFeGlzdHMnKS5maW5kKGNvbnRlbnRBbGVydCkudGV4dChcIlRoaXMgdXNlciBkb24ndCBleGlzdHNcIik7XHJcbiAgfVxyXG5cclxuICBkaXZBbGVydC5mYWRlSW4odGltZUluLCBcImxpbmVhclwiLCBmdW5jdGlvbigpIHtcclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgIGRpdkFsZXJ0LmZhZGVPdXQoKS5hbmltYXRlKHtcclxuICAgICAgICAnYm90dG9tJzogJzAlJ1xyXG4gICAgICB9LCB7XHJcbiAgICAgICAgZHVyYXRpb246ICdzbG93JyxcclxuICAgICAgICBxdWV1ZTogZmFsc2VcclxuICAgICAgfSk7XHJcbiAgICB9LCB0aW1lT3V0KTtcclxuICB9KS5hbmltYXRlKHtcclxuICAgICdib3R0b20nOiAnMjB2aCdcclxuICB9LCB7XHJcbiAgICBkdXJhdGlvbjogJ3Nsb3cnLFxyXG4gICAgcXVldWU6IGZhbHNlXHJcbiAgfSk7XHJcblxyXG59XHJcblxyXG4vLy8vLy8vLy8vLy8gVmFsaWRhIGxvbmdpdHVkXHJcbmZ1bmN0aW9uIHZhbGlkYXJMZW5ndGgodmFsb3IsIG1pbkxlbmd0aCwgbWF4TGVuZ3RoKSB7XHJcbiAgaWYgKCh2YWxvciA+PSBtaW5MZW5ndGgpICYgKHZhbG9yIDw9IG1heExlbmd0aCkpIHtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiB2YWxpZGF0ZUZvcm0oZm9ybSkge1xyXG5cclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGxldCBpbnB1dHMgPSAkKGZvcm0pLmZpbmQoJ2lucHV0LHNlbGVjdCcpO1xyXG4gIGxldCBjYW1wb3NPYmxpZ2EgPSAkKGZvcm0pLmZpbmQoJ2lucHV0OnZpc2libGUsc2VsZWN0OnZpc2libGUnKS5sZW5ndGg7XHJcbiAgbGV0IGJvdG9uU3VibWl0ID0gJChmb3JtKS5maW5kKCdidXR0b25bdHlwZT1cInN1Ym1pdFwiXScpO1xyXG5cclxuICAvL1ZhcmlhYmxlIHBhcmEgY29tcHJhciBsb3MgaW5wdXRzIHF1ZSBlc3RhbiBiaWVuIGNvbiBsYSBjYW50aWRhZCBkZSBpbnB1dHMgZGVsIGZvcm11bGFyaW9cclxuICBsZXQgdG90YWwgPSAwO1xyXG4gIC8vZXhwcmVzaW9uZXMgUmVndWxhcmVzXHJcbiAgY29uc3QgcmVnRXhwRW1haWwgPSAvXlthLXowLTkhIyQlJicqKy89P15fYHt8fX4tXSsoPzpcXC5bYS16MC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKSpAKD86W2EtejAtOV0oPzpbYS16MC05LV0qW2EtejAtOV0pP1xcLikrW2EtejAtOV0oPzpbYS16MC05LV0qW2EtejAtOV0pPyQvO1xyXG4gIGNvbnN0IHJlZ0V4cE51bWJlciA9IC9eXFxkKyQvO1xyXG5cclxuXHJcblxyXG5cclxuICAvLy8vVmFsaWRhciBsb3MgY2FtcG9zXHJcbiAgJChmb3JtKS5maW5kKCdpbnB1dCxzZWxlY3QnKS5lYWNoKGZ1bmN0aW9uKGksIGUpIHtcclxuXHJcblxyXG4gICAgbGV0IHZhbG9ySW5wdXQgPSAkKGUpLnZhbCgpO1xyXG4gICAgbGV0IHZhbG9yQ2hlY2tib3ggPSAkKGUpLnByb3AoJ2NoZWNrZWQnKTtcclxuICAgIGxldCB2YWxvclNlbGVjdCA9ICQoZSkudmFsKCk7XHJcbiAgICBsZXQgY3VzdG9tRGl2Q2hlY2sgPSAkKGUpLnBhcmVudCgpLmZpbmQoJ2Rpdi5jdXN0b20tY2hlY2tib3gnKTtcclxuXHJcblxyXG4gICAgaWYgKCQoZSkubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgIHN3aXRjaCAoJChlKS5hdHRyKCd0eXBlJykpIHtcclxuXHJcbiAgICAgICAgY2FzZSBcInRleHRcIjpcclxuICAgICAgICAgIHZhbG9ySW5wdXQgIT09IFwiXCIgPyBwaW50YXJTdGlsb3MoJChlKSwgJ3ZhbGlkbycpIDogcGludGFyU3RpbG9zKCQoZSksICdlcnJvcicpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgXCJwYXNzd29yZFwiOlxyXG4gICAgICAgICAgdmFsb3JJbnB1dCAhPT0gXCJcIiA/IHBpbnRhclN0aWxvcygkKGUpLCAndmFsaWRvJykgOiBwaW50YXJTdGlsb3MoJChlKSwgJ2Vycm9yJyk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSBcImRhdGVcIjpcclxuICAgICAgICAgIHZhbG9ySW5wdXQgIT09IFwiXCIgPyBwaW50YXJTdGlsb3MoJChlKSwgJ3ZhbGlkbycpIDogcGludGFyU3RpbG9zKCQoZSksICdlcnJvcicpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgXCJpZGVudGlmaWNhdGlvblwiOlxyXG4gICAgICAgICAgaWYgKChyZWdFeHBOdW1iZXIudGVzdCgkKGUpLnByb3AoJ3ZhbHVlJykpKSAmICh2YWxpZGFyTGVuZ3RoKHZhbG9ySW5wdXQubGVuZ3RoLCAxMCwgMTApKSkge1xyXG4gICAgICAgICAgICBwaW50YXJTdGlsb3MoJChlKSwgJ3ZhbGlkbycpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGludGFyU3RpbG9zKCQoZSksICdlcnJvcicpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgXCJlbWFpbEN1c3RvbVwiOlxyXG4gICAgICAgICAgcmVnRXhwRW1haWwudGVzdCgkKGUpLnByb3AoJ3ZhbHVlJykpID8gcGludGFyU3RpbG9zKCQoZSksICd2YWxpZG8nKSA6IHBpbnRhclN0aWxvcygkKGUpLCAnZXJyb3InKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlIFwiY2hlY2tib3hcIjpcclxuICAgICAgICAgIHZhbG9yQ2hlY2tib3ggIT09IGZhbHNlID8gcGludGFyU3RpbG9zKGN1c3RvbURpdkNoZWNrLCAndmFsaWRvJykgOiBwaW50YXJTdGlsb3MoY3VzdG9tRGl2Q2hlY2ssICdlcnJvcicpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgXCJzZWxlY3RcIjpcclxuICAgICAgICAgIHZhbG9yU2VsZWN0ICE9IDEgPyBwaW50YXJTdGlsb3MoJChlKSwgJ3ZhbGlkbycpIDogcGludGFyU3RpbG9zKCQoZSksICdlcnJvcicpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgdG90YWwgPSB0b3RhbCArIGN1bXBsZTtcclxuICAgIH1cclxuXHJcbiAgfSk7XHJcblxyXG4gIGlmICh0b3RhbCA9PT0gY2FtcG9zT2JsaWdhKSB7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbn1cclxuLy8gTk9URTogQ09ORklHIENPTlNVTFRBU1xyXG4kLmFqYXhTZXR1cCh7XHJcbiAgdXJsOiAnc2VydmljZXMvcHJvY2Vzcy5waHAnLFxyXG4gIHR5cGU6ICdQT1NUJyxcclxuICBhc3luYzogdHJ1ZSxcclxuICBlcnJvcjogZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZScsIHJlc3BvbnNlKTtcclxuICAgIHNob3dBbGVydChcInNlcnZlckRvd25cIiwgMTAwMCwgMzAwMCk7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vLy8gTk9URTogQlVTQ0FET1JcclxuXHJcbnZhciBwZXRpY2lvbjtcclxudmFyIGJ1dHRvblNlYXJjaCA9ICQoJyNzZWFyY2hBbGwnKTtcclxuXHJcblxyXG5idXR0b25TZWFyY2gua2V5cHJlc3MoZnVuY3Rpb24oKSB7XHJcbiAgbGV0IGJ1dHRvblZhbHVlID0gYnV0dG9uU2VhcmNoLnZhbCgpO1xyXG5cclxuICBpZiAoYnV0dG9uVmFsdWUubGVuZ3RoID4gMCkge1xyXG4gICAgc2VhcmNoU3R1ZGVudChidXR0b25TZWFyY2gpO1xyXG4gIH1cclxufSk7XHJcbiQoJ3NwYW4uaWNvbi1zZWFyY2gnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICBsZXQgYnV0dG9uVmFsdWUgPSBidXR0b25TZWFyY2gudmFsKCk7XHJcbiAgaWYgKGJ1dHRvblZhbHVlLmxlbmd0aCA+IDApIHtcclxuICAgIHNlYXJjaFN0dWRlbnQoYnV0dG9uU2VhcmNoKTtcclxuICB9XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gc2VhcmNoU3R1ZGVudChidXR0b24pIHtcclxuXHJcbiAgbGV0IHZhbHVlID0gYnV0dG9uLnZhbCgpO1xyXG4gIGxldCBpbnB1dCA9IGJ1dHRvbjtcclxuXHJcblxyXG4gIGNsZWFyVGltZW91dChwZXRpY2lvbik7XHJcbiAgcGV0aWNpb24gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgbGV0IGRhdGEgPSAnaWRGb3JtPXNlcmFjaEVzdHUmJyArIGlucHV0LnNlcmlhbGl6ZSgpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgJC5wb3N0KFwic2VydmljZXMvcHJvY2Vzcy5waHBcIiwgZGF0YSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG4gICAgICB2YXIgc3R1ZGVudHMgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTtcclxuXHJcblxyXG5cclxuICAgICAgaWYgKHN0dWRlbnRzLnN1Y2Nlc3MgPT0gXCJFcnJvclwiKSB7XHJcbiAgICAgICAgc2hvd0FsZXJ0KFwiZXJyb3JcIiwgMTAwMCwgMzAwMCk7XHJcbiAgICAgIH0gZWxzZSBpZiAoc3R1ZGVudHMuc3VjY2VzcyA9PSBcIkRvbid0IGV4aXN0c1wiKSB7XHJcbiAgICAgICAgc2hvd0FsZXJ0KFwiZG9udEV4aXN0c1wiLCAxMDAwLCAzMDAwKTtcclxuICAgICAgfSBlbHNlIHtcclxuXHJcblxyXG4gICAgICAgIHNob3dTdHVkZW50cyhzdHVkZW50cyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICB9LCAxMDAwKTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNob3dTdHVkZW50cyhzdHVkZW50cykge1xyXG4gIGxldCByb2wgPSBzdHVkZW50cy5zbGljZSgtMSlbMF0ucm9sO1xyXG4gIGxldCBvcHRpb25zID0gbnVsbDtcclxuXHJcblxyXG4gIHN3aXRjaCAocm9sKSB7XHJcbiAgICBjYXNlICdBZG1pbmlzdHJhZG9yJzpcclxuICAgICAgb3B0aW9ucyA9IGA8c3BhbiBjbGFzcz1cImljb24tZXllXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwiaWNvbi1wbHVzXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwiaWNvbi1iaW5cIj48L3NwYW4+YDtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdDb29yZGluYWRvcic6XHJcbiAgICAgIG9wdGlvbnMgPSBgPHNwYW4gY2xhc3M9XCJpY29uLWV5ZVwiPjwvc3Bhbj5gO1xyXG4gICAgICBicmVhaztcclxuICAgIGRlZmF1bHQ6XHJcblxyXG4gIH1cclxuXHJcbiAgLy8gTk9URTogRGVsZXRlIHRoZSBsYXN0IGVsZW1lbnQgb2YgdGhlIGFycmF5IGN1eiBpdCdzIHRoZSByb2xcclxuICBzdHVkZW50cy5wb3AoLTEpO1xyXG5cclxuICAkKCcjc2hvd1N0dWRlbnRzJykuZW1wdHkoKTtcclxuICAkLmVhY2goc3R1ZGVudHMuc2xpY2UoMCksIGZ1bmN0aW9uKGlkLCBzdHVkZW50KSB7XHJcblxyXG5cclxuICAgICQuZWFjaChzdHVkZW50LCBmdW5jdGlvbihjYW1wbywgdmFsdWUpIHtcclxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcclxuXHJcbiAgICAgICAgdmFsdWUgPSBcIiBcIjtcclxuICAgICAgfVxyXG5cclxuXHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgJCgnI3Nob3dTdHVkZW50cycpLmFwcGVuZChcclxuICAgICAgYFxyXG4gICAgICA8dHI+XHJcbiAgICAgICAgPHRkPiR7aWQrMX08L3RkPlxyXG4gICAgICAgIDx0ZCBkYXRhLXRkb2M9XCIke3N0dWRlbnQudGRvY19wZXJzb25hfVwiID4ke3N0dWRlbnQudGRvY19wZXJzb25hfTwvdGQ+XHJcbiAgICAgICAgPHRkIGRhdGEtc3R1ZGVudD1cIiR7c3R1ZGVudC5uZG9jfVwiPiR7c3R1ZGVudC5uZG9jfTwvdGQ+XHJcbiAgICAgICAgPHRkPiR7c3R1ZGVudC5ub21icmUxfSAke3N0dWRlbnQubm9tYnJlMn08L3RkPlxyXG4gICAgICAgIDx0ZD4ke3N0dWRlbnQuYXBlbGxpZG8xfSAke3N0dWRlbnQuYXBlbGxpZG8yfTwvdGQ+XHJcbiAgICAgICAgPHRkIGNsYXNzPVwidGFibGUtb3B0aW9uc1wiPiR7b3B0aW9uc308L3RkPlxyXG4gICAgICA8L3RyPlxyXG4gICAgICBgXHJcbiAgICApO1xyXG5cclxuICB9KTtcclxuXHJcbiAgb3B0aW9uc1N0dWRlbnRzKCk7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBvcHRpb25zU3R1ZGVudHMoKSB7XHJcbiAgLy8vL0VsaW1pbmFyIEVTVFVESUFOVEVcclxuXHJcbiAgJCgnc3Bhbi5pY29uLWJpbicpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICQoJyNtb2RhbERlbGV0ZScpLmZhZGVJbigpLmNzcyh7XHJcbiAgICAgIFwiZGlzcGxheVwiOiBcImZsZXhcIlxyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIC8vLy9Nb3N0cmFyIElORk8gLyBFRElUQVJcclxuICAkKCdzcGFuLmljb24tZXllJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgbGV0IG1vZGFsU2hvdyA9ICQoJyNtb2RhbEVkaXRTaG93Jyk7XHJcbiAgICBsZXQgbnVtU3R1ZGVudCA9ICQodGhpcykuY2xvc2VzdCgndHInKS5maW5kKCd0ZFtkYXRhLXN0dWRlbnRdJykuYXR0cignZGF0YS1zdHVkZW50Jyk7XHJcbiAgICBsZXQgdGRvY1N0dWRlbnQgPSAkKHRoaXMpLmNsb3Nlc3QoJ3RyJykuZmluZCgndGRbZGF0YS10ZG9jXScpLmF0dHIoJ2RhdGEtdGRvYycpO1xyXG5cclxuICAgIGxldCBkYXRhID0gYGlkRm9ybT1zaG93U3R1ZGVudEluZm8mbnVtSWRlbnQ9JHtudW1TdHVkZW50fSZ0aXBvSWRlbnQ9JHt0ZG9jU3R1ZGVudH1gO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgJC5wb3N0KFwic2VydmljZXMvcHJvY2Vzcy5waHBcIiwgZGF0YSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG4gICAgICB2YXIgc3R1ZGVudEluZm8gPSBKU09OLnBhcnNlKHJlc3BvbnNlKTtcclxuXHJcbiAgICAgIGlmIChzdHVkZW50SW5mby5zdWNjZXNzID09IFwiRXJyb3JcIikge1xyXG4gICAgICAgIHNob3dBbGVydChcImVycm9yXCIsIDEwMDAsIDMwMDApO1xyXG4gICAgICB9IGVsc2UgaWYgKHN0dWRlbnRJbmZvLnN1Y2Nlc3MgPT0gXCJEb24ndCBleGlzdHNcIikge1xyXG4gICAgICAgIHNob3dBbGVydChcImRvbnRFeGlzdHNcIiwgMTAwMCwgMzAwMCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2hvd1N0dWRlbnRJbmZvKHN0dWRlbnRJbmZvLG1vZGFsU2hvdyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIHNob3dTdHVkZW50SW5mbyhzdHVkZW50SW5mbyxtb2RhbFNob3cpIHtcclxuXHJcbiAgICBtb2RhbFNob3cuZmFkZUluKCkuY3NzKHtcclxuICAgICAgXCJkaXNwbGF5XCI6IFwiZmxleFwiXHJcbiAgICB9KTtcclxuXHJcbiAgICBsZXQgaW5wdXRzID0gbW9kYWxTaG93LmZpbmQoJ3NlbGVjdCxpbnB1dCcpO1xyXG4gICAgbGV0IHNhdmVCdXR0b25zID0gbW9kYWxTaG93LmZpbmQoJy5idG4tc3VibWl0TW9kYWwnKTtcclxuXHJcbiAgICBpbnB1dHMuYXR0cignZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgIHNhdmVCdXR0b25zLmhpZGUoKTtcclxuXHJcbiAgICAkLmVhY2goaW5wdXRzLGZ1bmN0aW9uKGtleSx2YWx1ZSl7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgbGV0IHRpdHRsZSA9IHN0dWRlbnRJbmZvWzBdLm5vbWJyZTE7XHJcbiAgICAkKCcjcGVyc29uTmFtZScpLnRleHQodGl0dGxlKTtcclxuXHJcblxyXG4gIH1cclxuXHJcblxyXG4gIC8vLy9OVUVWQSBNQVRSSUNVTEFcclxuICAkKCdzcGFuLmljb24tcGx1cycpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG5cclxuICAgIGxldCBtb2RhbE1hdHJpID0gJCgnI21vZGFsTWF0cmljdWxhJyk7XHJcblxyXG4gICAgbW9kYWxNYXRyaS5mYWRlSW4oKS5jc3Moe1xyXG4gICAgICBcImRpc3BsYXlcIjogXCJmbGV4XCJcclxuICAgIH0pO1xyXG5cclxuICB9KTtcclxufVxyXG5cclxuXHJcbi8vIE5PVEU6IENPTlNVTFRBIExPR0lOXHJcbiQoJ2Zvcm0jbG9naW4nKS5zdWJtaXQoZnVuY3Rpb24oZXZlbnQpIHtcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICB2YXIgZm9ybXVsYXJpbyA9ICQodGhpcyk7XHJcbiAgdmFyIGRhdGEgPSBmb3JtdWxhcmlvLnNlcmlhbGl6ZSgpO1xyXG4gIGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cclxuICAkLnBvc3QoXCJzZXJ2aWNlcy9sb2dpbi5waHA/bG9nPXRydWVcIiwgZGF0YSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHJcbiAgICB2YXIganNvbkRhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTtcclxuICAgIGlmIChqc29uRGF0YS5zdWNjZXNzID09IFwiQ29vbFwiKSB7XHJcblxyXG4gICAgICBzaG93QWxlcnQoXCJuaWNlXCIsIDEwMDAsIDMwMDApO1xyXG4gICAgICBsb2NhdGlvbi5ocmVmID0gJ2hvbWUucGhwJztcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzaG93QWxlcnQoXCJlcnJvclwiLCAxMDAwLCAzMDAwKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbn0pO1xyXG5cclxuLy8gTk9URTogTE9HIE9VVFxyXG4kKCcjbG9nT3V0JykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgJC5wb3N0KFwic2VydmljZXMvbG9naW4ucGhwP2xvZz1mYWxzZVwiLCBmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgdmFyIGpzb25EYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZSk7XHJcbiAgICBpZiAoanNvbkRhdGEuc3VjY2VzcyA9PSBcIkNvb2xcIikge1xyXG4gICAgICBsb2NhdGlvbi5ocmVmID0gJ2luZGV4LnBocCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzaG93QWxlcnQoXCJlcnJvclwiLCAxMDAwLCAzMDAwKTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcblxyXG5cclxuXHJcblxyXG4vLyBOT1RFOiBDT05TVUxUQSBFRElUXHJcbiQoJ2Zvcm0uZWRpdCcpLnN1Ym1pdChmdW5jdGlvbihldmVudCkge1xyXG4gIHNlbmRGb3JtKHRoaXMsIGZhbHNlKTtcclxufSk7XHJcblxyXG4vLyBOT1RFOiBDT05TVUxUQSBFRElUQVIgVVNFUk5BTUVcclxuJCgnZm9ybSNlZGl0VXNlcm5hbWUnKS5zdWJtaXQoZnVuY3Rpb24oZXZlbnQpIHtcclxuICBzZW5kRm9ybSh0aGlzLCBmYWxzZSk7XHJcbn0pO1xyXG5cclxuLy8gTk9URTogQ09OU1VMVEEgRURJVEFSIFBBU1NXT1JEXHJcbiQoJ2Zvcm0jZWRpdFBhc3N3b3JkJykuc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgc2VuZEZvcm0odGhpcywgZmFsc2UpO1xyXG59KTtcclxuXHJcbi8vIE5PVEU6IENPTlNVTFRBIE5VRVZPIEVTVFVESUFOVEVcclxuJCgnZm9ybSNlc3R1ZGlhbnRlJykuc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgc2VuZEZvcm0odGhpcyk7XHJcbn0pOyAvLyBOT1RFOiBDT05TVUxUQSBOVUVWTyBSRVNQT05TQUJMRVxyXG4kKCdmb3JtI3Jlc3BvbnNhYmxlJykuc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgc2VuZEZvcm0odGhpcyk7XHJcbn0pO1xyXG4vLyBOT1RFOiBDT05TVUxUQSBFTElNSU5BUlxyXG4kKCdmb3JtI2RlbGV0ZScpLnN1Ym1pdChmdW5jdGlvbihldmVudCkge1xyXG4gIHNlbmRGb3JtKHRoaXMpO1xyXG59KTtcclxuLy8gTk9URTogQ09OU1VMVEEgTlVFVkEgTUFUUklDVUxBXHJcbiQoJ2Zvcm0jbWF0cmljdWxhJykuc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgc2VuZEZvcm0odGhpcyk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gc2VuZEZvcm0oZm9ybSwgY2xvc2VNb2RhbCA9IHRydWUpIHtcclxuXHJcbiAgbGV0IGlkRm9ybSA9ICQoZm9ybSkuYXR0cignaWQnKTtcclxuICBsZXQgaW5wdXRzID0gJChmb3JtKS5maW5kKCdpbnB1dCxzZWxlY3QnKTtcclxuXHJcbiAgaWYgKHZhbGlkYXRlRm9ybShmb3JtKSkge1xyXG5cclxuICAgIHZhciBkYXRhID0gJ2lkRm9ybT0nICsgaWRGb3JtICsgJyYnICsgJChmb3JtKS5zZXJpYWxpemUoKTtcclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cclxuICAgICQuYWpheCh7XHJcbiAgICAgIGRhdGE6IGRhdGEsXHJcbiAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoZm9ybSkucGFyZW50KCkuZmluZCgnLmxvYWRpbmcnKS5zaG93KCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgJChmb3JtKS5wYXJlbnQoKS5maW5kKCcubG9hZGluZycpLmZhZGVPdXQoMTAwMCk7XHJcbiAgICAgICAgdmFyIGpzb25EYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZSk7XHJcbiAgICAgICAgaWYgKGpzb25EYXRhLnN1Y2Nlc3MgPT0gXCJDb29sXCIpIHtcclxuXHJcbiAgICAgICAgICBpZiAoY2xvc2VNb2RhbCkge1xyXG4gICAgICAgICAgICAkKGZvcm0pLmNsb3Nlc3QoJy5tb2RhbCcpLmZhZGVPdXQoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlucHV0cy52YWwoJycpLnJlbW92ZUNsYXNzKCdjb3JyZWN0bycpO1xyXG4gICAgICAgICAgc2hvd0FsZXJ0KFwibmljZVwiLCAxMDAwLCAzMDAwKTtcclxuXHJcbiAgICAgICAgfSBlbHNlIGlmIChqc29uRGF0YS5zdWNjZXNzID09IFwiRXJyb3JcIikge1xyXG4gICAgICAgICAgc2hvd0FsZXJ0KFwiZXJyb3JcIiwgMTAwMCwgMzAwMCk7XHJcblxyXG4gICAgICAgIH0gZWxzZSBpZiAoanNvbkRhdGEuc3VjY2VzcyA9PSBcIkVudHJ5IGR1cGxpY2F0ZVwiKSB7XHJcbiAgICAgICAgICBzaG93QWxlcnQoXCJlbnRyeUR1cGxpY2F0ZVwiLCAxMDAwLCAzMDAwKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiQuZ2V0SlNPTignYXNzZXRzL2pzb24vY2l0eXMuanNvbicsIGZ1bmN0aW9uKGRhdGEpIHtcclxuICAvLyB2YXIganNvbkRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xyXG4gIHZhciBvcHRpb25zID0gW107XHJcbiAgbGV0IHNlbGVjdCA9ICQoJ3NlbGVjdC5jaXR5cycpO1xyXG5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgIGZvciAodmFyIHogPSAwOyB6IDwgZGF0YVtpXS5jaXVkYWRlcy5sZW5ndGg7IHorKykge1xyXG4gICAgICBvcHRpb25zLnB1c2goXCI8b3B0aW9uIHZhbHVlPSdcIiArIGRhdGFbaV0uY2l1ZGFkZXNbel0gKyBcIic+XCIgKyBkYXRhW2ldLmRlcGFydGFtZW50byArICctJyArIGRhdGFbaV0uY2l1ZGFkZXNbel0gKyBcIjwvb3B0aW9uPlwiKTtcclxuICAgIH1cclxuICB9XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcHRpb25zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBzZWxlY3QuYXBwZW5kKG9wdGlvbnNbaV0pO1xyXG4gIH1cclxuXHJcbn0pO1xyXG5cclxuJC5nZXRKU09OKCdhc3NldHMvanNvbi9ibG9vZFR5cGVzLmpzb24nLCBmdW5jdGlvbihkYXRhKSB7XHJcblxyXG4gIHZhciBvcHRpb25zID0gW107XHJcbiAgbGV0IHNlbGVjdCA9ICQoJ3NlbGVjdC5ibG9vZFR5cGVzJyk7XHJcblxyXG4gICQuZWFjaChkYXRhLCBmdW5jdGlvbihrZXkpIHtcclxuICAgIG9wdGlvbnMucHVzaChcIjxvcHRpb24gdmFsdWU9J1wiICsga2V5ICsgXCInPlwiICsga2V5ICsgXCI8L29wdGlvbj5cIik7XHJcbiAgfSlcclxuXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcHRpb25zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBzZWxlY3QuYXBwZW5kKG9wdGlvbnNbaV0pO1xyXG4gIH1cclxuXHJcbn0pO1xyXG4iLCIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcclxuICAvL1ZBbGlkYXIgc2kgZWwgbmF2ZWdhZG9yIGVzIElFLiBTaSBsbyBlcywgZGlyZWNjaW9uYXJsbyBhIG90cmEgcGFnaW5hXHJcbiAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIlRyaWRlbnQvXCIpID4gLTEpIHtcclxuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJ2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20ubXgvY2hyb21lLz9icmFuZD1DSEJGJmRzX2tpZD00MzcwMDAzNDYzMjc0ODY5NCZ1dG1fc291cmNlPWJpbmcmdXRtX21lZGl1bT1jcGMmdXRtX2NhbXBhaWduPTEwMDU5OTIlMjAlN0MlMjBDaHJvbWUlMjBXaW4xMCUyMCU3QyUyMERSJTIwJTdDJTIwRVNTMDElMjAlN0MlMjBOQSUyMCU3QyUyME5BJTIwJTdDJTIwZXMlMjAlN0MlMjBEZXNrJTIwJTdDJTIwQklORyUyMFNFTSUyMCU3QyUyMEJLV1MlMjB+JTIwVG9wJTIwS1dEUyUyMC0lMjBFeGFjdCZ1dG1fdGVybT1kZXNjYXJnYXIlMjBjaHJvbWUmdXRtX2NvbnRlbnQ9RG93bmxvYWQlMjBDaHJvbWUlMjAtJTIwRXhhY3QmZ2NsaWQ9Q083MG02VFQtZVVDRlVUQ0RRb2RtaXdEUlEmZ2Nsc3JjPWRzJ1xyXG4gIH1cclxuICAvL0ZhZGUgaW4gZGUgbGEgcMOhZ2luYSBMb2dpbiBhbCBpbmljaWFyIGVsIG5hdmVnYWRvclxyXG5cclxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgJCgnc2VjdGlvbiNsb2dpbicpLmZhZGVJbigxNTAwKS5jc3Moe1xyXG4gICAgICBcImRpc3BsYXlcIjogXCJmbGV4XCJcclxuICAgIH0pO1xyXG4gIH0sIDUwMCk7XHJcbiAgLy9JbmljaWFsaXphciBsYXMgYW5pbWFjaW9uZXMgZGUgbGEgbGlicmVyaWEgV09XIChhbmltYWNpb25lcylcclxuICB2YXIgd293ID0gbmV3IFdPVygpLmluaXQoKTtcclxuXHJcbiAgLy8gSGFjZXIgcXVlIGxvcyBjaGVja2JveCBjb24gZXN0aWxvcyBmdW5jaW9uZW5cclxuICAkKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgIGxldCBjdXN0b21DaGVjayA9ICQodGhpcykucGFyZW50KCkuZmluZCgnZGl2LmN1c3RvbS1jaGVja2JveCcpO1xyXG4gICAgJCh0aGlzKS5wcm9wKCdjaGVja2VkJykgPyBjdXN0b21DaGVjay50ZXh0KCfinJQnKSA6IGN1c3RvbUNoZWNrLnRleHQoJycpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBFZmVjdG9zIG1lbnUgYnVyZ3VlclxyXG4gICQoJ2Rpdi5pY29uLW1lbnUnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgIGxldCBtZW51ID0gJCgnZGl2Lm1lbnUtY29udGFpbmVyJyk7XHJcbiAgICBpZiAobWVudS5jc3MoJ2Rpc3BsYXknKSA9PSBcIm5vbmVcIikge1xyXG4gICAgICBtZW51LnNsaWRlRG93bigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbWVudS5zbGlkZVVwKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gICQoJyNhY291bnRidG4nKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgIGxldCBhY291bnRDb250YWluZXIgPSAkKCcuYWNjb3VudC1jb250YWluZXInKTtcclxuICAgIGlmIChhY291bnRDb250YWluZXIuY3NzKCdkaXNwbGF5JykgPT0gXCJub25lXCIpIHtcclxuICAgICAgYWNvdW50Q29udGFpbmVyLnNsaWRlRG93bigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYWNvdW50Q29udGFpbmVyLnNsaWRlVXAoKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgLy9Nb2RhbGVzXHJcblxyXG4gIC8vLy9FZGl0YXIgdXN1ZWFyaW9cclxuICAkKCcjZWRpdFVzZXInKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICQoJyNtb2RhbEVkaXRVc2VyJykuZmFkZUluKCkuY3NzKHtcclxuICAgICAgXCJkaXNwbGF5XCI6IFwiZmxleFwiXHJcbiAgICB9KTtcclxuICB9KTtcclxuXHJcbiAgLy8vL051ZXZhIG1hdHJpY3VsYVxyXG4gICQoJyNhZGRSZWxhdGl2ZScpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG5cclxuICAgIGxldCBtb2RhbCA9ICQoJyNtb2RhbE5ld1JlbGF0aXZlJyk7XHJcbiAgICBsZXQgY2xvc2VzdE1vZGFsID0gJCh0aGlzKS5jbG9zZXN0KCcubW9kYWwnKTtcclxuXHJcblxyXG4gICAgY2xvc2VzdE1vZGFsLmNzcyh7XCJ6LWluZGV4XCI6IFwiMTBcIn0pXHJcblxyXG4gICAgbW9kYWwuZmFkZUluKCkuY3NzKHtcclxuICAgICAgXCJkaXNwbGF5XCI6IFwiZmxleFwiLFxyXG4gICAgfSk7XHJcblxyXG5cclxuICB9KTtcclxuXHJcbiAgLy8vL05VRVZPIEVTVFVESUFOVEVcclxuICAkKCcjbmV3U3R1ZGVudCcpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG5cclxuICAgIGxldCBtb2RhbCA9ICQoJyNtb2RhbE5ld1N0dWRlbnQnKTtcclxuXHJcbiAgICBsZXQgY2xvc2VzdE1vZGFsID0gJCh0aGlzKS5jbG9zZXN0KCcubW9kYWwnKTtcclxuXHJcblxyXG4gICAgY2xvc2VzdE1vZGFsLmNzcyh7XCJ6LWluZGV4XCI6IFwiMTBcIn0pXHJcblxyXG4gICAgbW9kYWwuZmFkZUluKCkuY3NzKHtcclxuICAgICAgXCJkaXNwbGF5XCI6IFwiZmxleFwiLFxyXG4gICAgfSk7XHJcblxyXG5cclxuICB9KTtcclxuXHJcblxyXG4gIC8vLy9DZXJyYXIgbW9kYWxlc1xyXG4gICQoJy5idG4tY2FuY2VsJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAkKHRoaXMpLmNsb3Nlc3QoJy5tb2RhbCwubW9kYWwtdGl0dGxlJykuZmFkZU91dCgpO1xyXG4gICAgLy8gJCgnLmxvYWRpbmcnKS5mYWRlT3V0KCk7XHJcbiAgICAkKCcuYWxlcnQtY29udGFpbmVyJykuZmFkZU91dCgpO1xyXG4gIH0pO1xyXG5cclxuXHJcbiAgJCgnI2J0bi1lZGl0U3R1ZGVudCcpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICBsZXQgbW9kYWwgPSAkKHRoaXMpLmNsb3Nlc3QoJy5tb2RhbCcpO1xyXG4gICAgbGV0IGlucHV0cyA9IG1vZGFsLmZpbmQoJ3NlbGVjdCxpbnB1dCcpO1xyXG5cclxuICAgIG1vZGFsLmZpbmQoJy5idG4tc3VibWl0TW9kYWwnKS5mYWRlSW4oJzUwMCcpO1xyXG4gICAgaW5wdXRzLmF0dHIoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gIH0pO1xyXG5cclxuXHJcblxyXG5cclxuICAvL1RhYmxhc1xyXG4gICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKSB7XHJcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPD0gNTIwKSB7XHJcbiAgICAgICQoJ3RhYmxlJykuY3NzKHtcclxuICAgICAgICBcIm92ZXJmbG93LXhcIjogXCJzY3JvbGxcIlxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcblxyXG5cclxuXHJcbn0pO1xyXG4iXX0=
